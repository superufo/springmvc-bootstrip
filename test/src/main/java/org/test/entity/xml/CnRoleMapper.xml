<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.test.dao.CnRoleDao">
  <resultMap id="BaseResultMap" type="org.test.entity.CnRole">
    <id column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_delete_reason" jdbcType="VARCHAR" property="roleDeleteReason" />
    <result column="role_createdate" jdbcType="TIMESTAMP" property="roleCreatedate" />
    <result column="role_modifydate" jdbcType="TIMESTAMP" property="roleModifydate" />
    <result column="role_deleted" jdbcType="CHAR" property="roleDeleted" />
  </resultMap>
  <sql id="Base_Column_List">
    role_id, role_name, role_delete_reason, role_createdate, role_modifydate, role_deleted
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cn_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cn_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.test.entity.CnRole">
    <selectKey keyProperty="roleId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cn_role (role_name, role_delete_reason, role_createdate, 
      role_modifydate, role_deleted)
    values (#{roleName,jdbcType=VARCHAR}, #{roleDeleteReason,jdbcType=VARCHAR}, #{roleCreatedate,jdbcType=TIMESTAMP}, 
      #{roleModifydate,jdbcType=TIMESTAMP}, #{roleDeleted,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.test.entity.CnRole">
    <selectKey keyProperty="roleId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cn_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleName != null">
        role_name,
      </if>
      <if test="roleDeleteReason != null">
        role_delete_reason,
      </if>
      <if test="roleCreatedate != null">
        role_createdate,
      </if>
      <if test="roleModifydate != null">
        role_modifydate,
      </if>
      <if test="roleDeleted != null">
        role_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDeleteReason != null">
        #{roleDeleteReason,jdbcType=VARCHAR},
      </if>
      <if test="roleCreatedate != null">
        #{roleCreatedate,jdbcType=TIMESTAMP},
      </if>
      <if test="roleModifydate != null">
        #{roleModifydate,jdbcType=TIMESTAMP},
      </if>
      <if test="roleDeleted != null">
        #{roleDeleted,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.test.entity.CnRole">
    update cn_role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDeleteReason != null">
        role_delete_reason = #{roleDeleteReason,jdbcType=VARCHAR},
      </if>
      <if test="roleCreatedate != null">
        role_createdate = #{roleCreatedate,jdbcType=TIMESTAMP},
      </if>
      <if test="roleModifydate != null">
        role_modifydate = #{roleModifydate,jdbcType=TIMESTAMP},
      </if>
      <if test="roleDeleted != null">
        role_deleted = #{roleDeleted,jdbcType=CHAR},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.test.entity.CnRole">
    update cn_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_delete_reason = #{roleDeleteReason,jdbcType=VARCHAR},
      role_createdate = #{roleCreatedate,jdbcType=TIMESTAMP},
      role_modifydate = #{roleModifydate,jdbcType=TIMESTAMP},
      role_deleted = #{roleDeleted,jdbcType=CHAR}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
</mapper>